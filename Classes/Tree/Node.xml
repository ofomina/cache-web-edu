<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Tree.Node">
<Abstract>1</Abstract>
<Super>%Persistent</Super>
<TimeCreated>64120,60850.010429</TimeCreated>

<Parameter name="TABLENAME">
</Parameter>

<Property name="Parent">
<Type>Tree.Node</Type>
<Cardinality>one</Cardinality>
<Inverse>Childrens</Inverse>
<Relationship>1</Relationship>
<OnDelete>cascade</OnDelete>
</Property>

<Property name="Childrens">
<Type>Tree.Node</Type>
<Cardinality>many</Cardinality>
<Inverse>Parent</Inverse>
<Relationship>1</Relationship>
</Property>

<Method name="toJSON">
<Abstract>1</Abstract>
<ReturnType>%ZEN.proxyObject</ReturnType>
</Method>

<Method name="fromJSON">
<Abstract>1</Abstract>
<FormalSpec>proxy:%ZEN.proxyObject</FormalSpec>
</Method>

<Method name="CreateSql">
<ClassMethod>1</ClassMethod>
<FormalSpec>parentId:%String="",columns:%ListOfObjects,*plist</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    set sql = "SELECT id FROM "_..#TABLENAME_" WHERE 1=1"
    set plist = 0
    
    if (parentId '= "") 
    {
        set sql = sql_" AND ""parent"" = ?"
        set plist($i(plist)) = parentId
    }
    else
    {
        set sql = sql_" AND ""parent"" is NULL"   
    }
    
    for i = 1:1:columns.Count()
    {
        set column = columns.GetAt(i)
        if (column.Value '= "") {
            set sql = sql_" AND """_column.Property_""" LIKE ?"
            set plist($i(plist)) = "%"_column.Value_"%"
        }
    }   
        
    for i = 1:1:columns.Count()
    {
        set column = columns.GetAt(i)
        
        if (column.Sorted = "top")
        {
            set sql = sql_" ORDER BY """_column.Property_""" DESC"
            quit   
        }
        elseif (column.Sorted = "bottom")
        {
            set sql = sql_" ORDER BY """_column.Property_""""
            quit   
        }   
    }
    return sql
]]></Implementation>
</Method>

<Method name="GetAll">
<ClassMethod>1</ClassMethod>
<FormalSpec>parentID:%String,columns:%ListOfObjects</FormalSpec>
<ReturnType>%ListOfObjects</ReturnType>
<Implementation><![CDATA[
    set arrayID = ##class(%ListOfObjects).%New()
    set sql = ..CreateSql(parentID, columns, .plist)
    
    set statement = ##class(%SQL.Statement).%New(), statement.%ObjectSelectMode=1
    set status = statement.%Prepare(sql)
    if $$$ISERR(status) $$$ThrowStatus(status)
    
    set resultSet = statement.%Execute(plist...)
    while (resultSet.%Next() '= 0)
    {
        do arrayID.Insert(resultSet.ID)
    }

    return arrayID
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Tree.NodeD</DataLocation>
<DefaultData>NodeDefaultData</DefaultData>
<IdLocation>^Tree.NodeD</IdLocation>
<IndexLocation>^Tree.NodeI</IndexLocation>
<StreamLocation>^Tree.NodeS</StreamLocation>
<Data name="NodeDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Parent</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
